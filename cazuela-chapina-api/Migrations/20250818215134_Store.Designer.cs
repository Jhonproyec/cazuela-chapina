// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cazuela_chapina_api.Context;

#nullable disable

namespace cazuela_chapina_api.Migrations
{
    [DbContext(typeof(AppDbC))]
    [Migration("20250818215134_Store")]
    partial class Store
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("cazuela_chapina_api.Models.Combo", b =>
                {
                    b.Property<int>("ComboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComboId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdBebida")
                        .HasColumnType("int");

                    b.Property<int>("IdEnvoltura")
                        .HasColumnType("int");

                    b.Property<int>("IdMasa")
                        .HasColumnType("int");

                    b.Property<int>("IdPicante")
                        .HasColumnType("int");

                    b.Property<int>("IdRelleno")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Presentation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("QuantityBebida")
                        .HasColumnType("int");

                    b.Property<int>("QuantityTamal")
                        .HasColumnType("int");

                    b.HasKey("ComboId");

                    b.HasIndex("IdBebida");

                    b.HasIndex("IdEnvoltura");

                    b.HasIndex("IdMasa");

                    b.HasIndex("IdPicante");

                    b.HasIndex("IdRelleno");

                    b.ToTable("combo");
                });

            modelBuilder.Entity("cazuela_chapina_api.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"));

                    b.Property<float>("Mermas")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("QuantityAprox")
                        .HasColumnType("real");

                    b.Property<float>("Stock")
                        .HasColumnType("real");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitMeasurementId")
                        .HasColumnType("int");

                    b.HasKey("InventoryId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UnitMeasurementId");

                    b.ToTable("inventory");
                });

            modelBuilder.Entity("cazuela_chapina_api.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<bool>("isAtole")
                        .HasColumnType("bit");

                    b.HasKey("ProductId");

                    b.ToTable("product");
                });

            modelBuilder.Entity("cazuela_chapina_api.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreId"));

                    b.Property<int?>("BebidaId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("ComboId")
                        .HasColumnType("int");

                    b.Property<int?>("EndulzarId")
                        .HasColumnType("int");

                    b.Property<int?>("EnvolturaId")
                        .HasColumnType("int");

                    b.Property<bool?>("Malvavisco")
                        .HasColumnType("bit");

                    b.Property<int?>("MasaId")
                        .HasColumnType("int");

                    b.Property<int?>("PicanteId")
                        .HasColumnType("int");

                    b.Property<string>("Presentation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("QuantityBebida")
                        .HasColumnType("int");

                    b.Property<int?>("QuantityTamal")
                        .HasColumnType("int");

                    b.Property<int?>("RellenoId")
                        .HasColumnType("int");

                    b.Property<bool?>("Topping")
                        .HasColumnType("bit");

                    b.HasKey("StoreId");

                    b.HasIndex("BebidaId");

                    b.HasIndex("ComboId");

                    b.HasIndex("EndulzarId");

                    b.HasIndex("EnvolturaId");

                    b.HasIndex("MasaId");

                    b.HasIndex("PicanteId");

                    b.HasIndex("RellenoId");

                    b.ToTable("store");
                });

            modelBuilder.Entity("cazuela_chapina_api.Models.Supplier", b =>
                {
                    b.Property<int>("supplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("supplierId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nit")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("supplierId");

                    b.ToTable("suppliers");
                });

            modelBuilder.Entity("cazuela_chapina_api.Models.UnitMeasurement", b =>
                {
                    b.Property<int>("UnitMeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitMeasurementId"));

                    b.Property<float>("ConvertionBase")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnitMeasurementId");

                    b.ToTable("unit_measurement");
                });

            modelBuilder.Entity("cazuela_chapina_api.Models.Combo", b =>
                {
                    b.HasOne("cazuela_chapina_api.Models.Inventory", "Bebida")
                        .WithMany()
                        .HasForeignKey("IdBebida")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("cazuela_chapina_api.Models.Inventory", "Envoltura")
                        .WithMany()
                        .HasForeignKey("IdEnvoltura")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("cazuela_chapina_api.Models.Inventory", "Masa")
                        .WithMany()
                        .HasForeignKey("IdMasa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("cazuela_chapina_api.Models.Inventory", "Picante")
                        .WithMany()
                        .HasForeignKey("IdPicante")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("cazuela_chapina_api.Models.Inventory", "Relleno")
                        .WithMany()
                        .HasForeignKey("IdRelleno")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bebida");

                    b.Navigation("Envoltura");

                    b.Navigation("Masa");

                    b.Navigation("Picante");

                    b.Navigation("Relleno");
                });

            modelBuilder.Entity("cazuela_chapina_api.Models.Inventory", b =>
                {
                    b.HasOne("cazuela_chapina_api.Models.Supplier", "Supplier")
                        .WithMany("Inventories")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cazuela_chapina_api.Models.UnitMeasurement", "UnitMeasurement")
                        .WithMany("Inventories")
                        .HasForeignKey("UnitMeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");

                    b.Navigation("UnitMeasurement");
                });

            modelBuilder.Entity("cazuela_chapina_api.Models.Store", b =>
                {
                    b.HasOne("cazuela_chapina_api.Models.Inventory", "Bebida")
                        .WithMany()
                        .HasForeignKey("BebidaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("cazuela_chapina_api.Models.Combo", "Combo")
                        .WithMany()
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("cazuela_chapina_api.Models.Inventory", "Endulzar")
                        .WithMany()
                        .HasForeignKey("EndulzarId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("cazuela_chapina_api.Models.Inventory", "Envoltura")
                        .WithMany()
                        .HasForeignKey("EnvolturaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("cazuela_chapina_api.Models.Inventory", "Masa")
                        .WithMany()
                        .HasForeignKey("MasaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("cazuela_chapina_api.Models.Inventory", "Picante")
                        .WithMany()
                        .HasForeignKey("PicanteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("cazuela_chapina_api.Models.Inventory", "Relleno")
                        .WithMany()
                        .HasForeignKey("RellenoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Bebida");

                    b.Navigation("Combo");

                    b.Navigation("Endulzar");

                    b.Navigation("Envoltura");

                    b.Navigation("Masa");

                    b.Navigation("Picante");

                    b.Navigation("Relleno");
                });

            modelBuilder.Entity("cazuela_chapina_api.Models.Supplier", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("cazuela_chapina_api.Models.UnitMeasurement", b =>
                {
                    b.Navigation("Inventories");
                });
#pragma warning restore 612, 618
        }
    }
}
